#!/bin/bash

CSV_FILE="../../ex02/src/hh_sorted.csv"
OUTPUT_FILE="hh_positions.csv"

# Чтение заголовка из входного файла и запись его в выходной файл
head -n 1 "$CSV_FILE" | sed 's/^/"/; s/$/"/; s/,/","/g' > "$OUTPUT_FILE"
# sed 's/^/"/; s/$/"/; s/,/","/g': Использует sed для добавления кавычек вокруг каждого элемента заголовка. 
# s/^/"/ добавляет кавычку в начало строки, 
# s/$/"/ добавляет кавычку в конец строки, 
# s/,/","/g заменяет все запятые на ",".

# Чтение и обработка оставшихся строк с помощью perl
# | (pipe): Этот символ используется для передачи вывода одной команды в качестве ввода для другой команды.
# В данном случае вывод команды tail передается на вход команде perl.
# perl: Это интерпретатор языка Perl, который позволяет выполнять Perl-скрипты.
# -F',"|"': Этот параметр задает разделитель для разбивки входных данных на поля. 
# В данном случае используется регулярное выражение ',"|",'
# -l: Этот параметр включает автоматическое добавление символа новой строки (\n) к выходным данным 
# и удаляет его из входных данных. Это удобно для работы с текстом.
# -a: Этот параметр включает автоматическое создание массива @F, который будет содержать все поля текущей строки. 
# Поля будут разделены в соответствии с заданным разделителем ($F[0], $F[1], и т.д.).
# -n: Этот параметр заставляет Perl выполнять блок кода для каждой строки входных данных. 
# То есть код внутри блока будет выполняться для каждой строки, прочитанной из входного потока.
tail -n +2 "$CSV_FILE" | perl -F',"|",' -lane '
    
    # Убираем кавычки у всех элементов массива @F

    for my $i (0 .. $#F) {
        $F[$i] =~ s/^"//;  # Убираем открывающую кавычку
        $F[$i] =~ s/"$//;  # Убираем закрывающую кавычку
    }
    
    # создаём массив слов @words из третьего столбца ($F[2])
    # создаёт массив отфильтрованных слов @filtered_words
    # объединяем в строку $joined_words через "/" слова из массива @filtered_words
    # присваиваем новую строку $F[2]

    my @words = split(/[^a-zA-Z0-9]+/, $F[2]);
    my @filtered_words = grep { $_ eq 'Junior' || $_ eq 'Middle' || $_ eq 'Senior' } @words;
    my $joined_words = join("/", @filtered_words);
    $F[2] = $joined_words;
    if ($F[2] eq "") {
        $F[2] = "-";
    }
    
    # делаем кавычки у всех элементов массива @F

    for my $i (0 .. $#F) {
        if ($i != 3) {
            $F[$i] = "\"$F[$i]\"";
        }
    }

    print join(",", @F);

' >> "$OUTPUT_FILE"

echo "Результат записан в файл $OUTPUT_FILE"
